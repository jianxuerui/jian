#!/usr/bin/env bash
# nockchain_toolbox.sh 增强交互版 v7.0
# 特性：动态菜单 + 彩色输出 + 输入验证

set -euo pipefail
IFS=$'\n\t'

###############################
# 全局配置
###############################
SRC_DIR="${HOME}/build/ethminer"
INSTALL_PREFIX="/usr/local"
LOG_FILE="${HOME}/nockchain.log"
CONFIG_FILE="${HOME}/.nockchain.conf"
declare -a MAIN_MENU=(
    "安装/更新 ethminer"
    "配置钱包地址"
    "启动挖矿节点"
    "查看实时日志"
    "系统信息"
    "退出"
)

###############################
# 颜色输出定义
###############################
RED='\033[31m'
GREEN='\033[32m'
YELLOW='\033[33m'
BLUE='\033[34m'
NC='\033[0m'
info()  { echo -e "${GREEN}[INFO]${NC} $*"; }
warn()  { echo -e "${YELLOW}[WARN]${NC} $*"; }
err()   { echo -e "${RED}[ERR]${NC} $*"; exit 1; }
header(){ echo -e "${BLUE}\n========== $1 ==========${NC}"; }

###############################
# 交互式菜单核心
###############################
show_menu() {
    clear
    header "Nockchain 管理终端"
    
    local counter=1
    for item in "${MAIN_MENU[@]}"; do
        printf "%2d) %s\n" $counter "$item"
        ((counter++))
    done
}

validate_input() {
    [[ $1 =~ ^[0-9]+$ ]] && [ $1 -ge 1 ] && [ $1 -le ${#MAIN_MENU[@]} ]
}

handle_choice() {
    case $1 in
        1) install_deps
           fetch_source
           apply_patches
           build_ethminer ;;
        2) manage_wallet ;;
        3) start_node ;;
        4) view_logs ;;
        5) show_system_info ;;
        6) info "感谢使用！"; exit 0 ;;
        *) warn "无效选项，请重新选择"; return 1 ;;
    esac
}

menu_loop() {
    while true; do
        show_menu
        read -rp "请输入选项编号 [1-${#MAIN_MENU[@]}]: " choice
        
        if validate_input "$choice"; then
            if handle_choice "$choice"; then
                read -rp "操作完成，按回车返回菜单..."
            fi
        else
            warn "输入无效，请输入有效数字"
            sleep 1
        fi
    done
}

###############################
# 功能函数（保持原有实现）
###############################
install_deps() { ... }
fetch_source() { ... }
apply_patches() { ... }
build_ethminer() { ... }
manage_wallet() { ... }
start_node() { ... }
view_logs() { ... }

show_system_info() {
    header "系统信息"
    echo -e "主机名: $(hostname)"
    echo -e "系统版本: $(grep PRETTY_NAME /etc/os-release | cut -d'"' -f2)"
    echo -e "CPU核心: $(nproc)"
    echo -e "内存总量: $(free -h | awk '/Mem/{print $2}')"
}

###############################
# 主入口
###############################
main() {
    trap 'echo -e "\n中断操作，退出脚本..."; exit 1' INT
    menu_loop
}

main "$@"
