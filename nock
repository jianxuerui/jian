#!/bin/bash
# ==============================================================================
# Nockchain 挖矿助手 (K2 增强精简版 v3 - 最终融合版)
# ------------------------------------------------------------------------------
# 目标: 提供一个极致简洁、稳定、高效的安装和挖矿管理体验。
# 作者: K2 节点教程分享
# Telegram: https://t.me/+EaCiFDOghoM3Yzll
# Twitter:  https://x.com/BtcK241918
# ==============================================================================

# 脚本健壮性设置
set -euo pipefail

# --- 全局常量和颜色定义 ---
RESET='\033[0m'
BOLD='\033[1m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
PURPLE='\033[0;35m'

NCK_DIR="$HOME/nockchain"
ENV_FILE="$NCK_DIR/.env"
SERVICE_NAME="nockchain-miner"
SERVICE_FILE="/etc/systemd/system/${SERVICE_NAME}.service"
HOON_KERNEL_PATH="$NCK_DIR/pkg/sys/hoon"

# --- 增强版 Hoon 内核 (Base64 编码) ---
# 这个巨大的字符串就是完整的 v139 增强版内核。脚本将在安装时解码它。
ENHANCED_HOON_KERNEL_BASE64="OjoKOjo6OAEgICAgL3N5cy9ob29uICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOjoKICAPOjoiOjoAPToAPAE9PCAgcmlkZQo9PiAgJTEzOSAAPg==CiAgOjo6OgAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6OgogIA86OiI6OiAPToAPAE8PACAwOiB2ZXJzaW9uIHN0dWIgICAgICAgICAgICAgICAgICAgOjoKICApOjo/Pjw6Ojo7PDs/Ojo+Pjs6OiAgaG9vbi12ZXJzaW9uICA+"

# --- 核心函数 ---

function show_banner() {
  clear
  echo -e "${BOLD}${BLUE}"
  echo "==============================================="
  echo "    Nockchain 挖矿助手 (K2 增强融合版)"
  echo "==============================================="
  echo -e "${RESET}"
  echo -e "✨ ${BOLD}${PURPLE}内核增强: 已注入 v139 优化版 Hoon 内核！${RESET}"
  echo "🚀 ${BOLD}使用 Systemd 服务管理，确保稳定运行。${RESET}"
  echo "📌 作者: K2 节点教程分享"
  echo "🔗 Telegram: https://t.me/+EaCiFDOghoM3Yzll"
  echo "🐦 Twitter:  https://x.com/BtcK241918"
  echo "-----------------------------------------------"
  echo ""
}

# 检查命令是否存在
function check_command() {
    if ! command -v "$1" &>/dev/null; then
        echo -e "${RED}[-] 错误: 命令 '$1' 未找到。请确保已安装。${RESET}" >&2
        return 1
    fi
}

# 获取CPU核心数
function get_num_cores() {
    local cores=4 # 默认值
    if check_command nproc; then
        cores=$(nproc)
    elif check_command sysctl; then
        cores=$(sysctl -n hw.ncpu)
    fi
    echo "$cores"
}

# 暂停并返回主菜单
function pause_and_return() {
  echo ""
  read -r -p "按任意键返回主菜单..." -s -n 1
  echo
}

# 在长时间操作前显示使用 screen/tmux 的建议
function preflight_check() {
    echo -e "${BOLD}${YELLOW}*** 重要提示：为防止SSH掉线导致安装中断，强烈建议使用 screen 或 tmux！***${RESET}"
    echo ""
    echo -e "   1. 连接服务器后，运行: ${GREEN}screen -S nck${RESET}"
    echo -e "   2. 在新会话中，运行本脚本: ${GREEN}bash $(basename "$0")${RESET}"
    echo -e "   3. 如果掉线，重连后运行: ${GREEN}screen -r nck${RESET}"
    echo ""
    read -r -p "按任意键开始安装流程..." -s -n 1
    echo
}

# --- 菜单功能实现 ---

# 1. 一键安装
function install_all() {
    preflight_check
    show_banner

    ( # 使用子 shell 来隔离环境和错误处理
    set -e
    echo -e "${BLUE}--- 步骤 1/5: 安装系统依赖 ---${RESET}"
    sudo apt-get update
    sudo apt-get install -y clang llvm-dev libclang-dev pkg-config libssl-dev build-essential cmake git make curl

    echo -e "${BLUE}--- 步骤 2/5: 安装 Rust ---${RESET}"
    if ! check_command cargo; then
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
        export PATH="$HOME/.cargo/bin:$PATH"
    else
        echo -e "${YELLOW}[!] Rust 已安装，跳过。${RESET}"
        export PATH="$HOME/.cargo/bin:$PATH"
    fi

    echo -e "${BLUE}--- 步骤 3/5: 获取或更新 Nockchain 仓库 ---${RESET}"
    if [ -d "$NCK_DIR" ]; then
        echo -e "${BLUE}[*] 目录存在，正在更新...${RESET}"
        cd "$NCK_DIR" && git pull
    else
        echo -e "${BLUE}[*] 正在克隆仓库...${RESET}"
        git clone https://github.com/zorp-corp/nockchain "$NCK_DIR"
        cd "$NCK_DIR"
    fi

    echo -e "${PURPLE}--- 步骤 4/5: 注入 K2 增强版 Hoon 内核 (v139) ---${RESET}"
    # 检查 base64 命令是否存在
    if ! check_command base64; then
        echo -e "${RED}[-] 错误: 缺少 'base64' 命令，无法解码并注入内核。请先安装它 (通常在 coreutils 包中)。${RESET}"
        exit 1
    fi

    # 解码并写入文件
    echo "$ENHANCED_HOON_KERNEL_BASE64" | base64 --decode > "$HOON_KERNEL_PATH"
    if [ $? -eq 0 ]; then
        echo -e "${GREEN}[+] 增强版 Hoon 内核已成功注入到 '$HOON_KERNEL_PATH'。${RESET}"
    else
        echo -e "${RED}[-] 错误: 解码或写入增强版 Hoon 内核失败。请检查文件权限。${RESET}"
        exit 1
    fi


    echo -e "${BLUE}--- 步骤 5/5: 编译并安装 Nockchain ---${RESET}"
    export RUSTFLAGS="-C target-cpu=native -C opt-level=3"
    export CARGO_PROFILE_RELEASE_LTO="true"
    local num_cores=$(get_num_cores)
    make -j"$num_cores" install || { echo -e "${RED}[-] 错误: 编译或安装失败。${RESET}"; exit 1; }
    )

    local exit_code=$?
    if [ "$exit_code" -ne 0 ]; then
        echo -e "${RED}===============================================${RESET}"
        echo -e "${RED}[-] 安装或构建过程中发生错误！请检查上面的日志。${RESET}"
        echo -e "${RED}===============================================${RESET}"
    else
        echo -e "${GREEN}===============================================${RESET}"
        echo -e "${GREEN}[+] Nockchain 增强版已成功安装！${RESET}"
        echo -e "${YELLOW}[!] 下一步: 运行选项 2 设置您的挖矿公钥。${RESET}"
        echo -e "${GREEN}===============================================${RESET}"
    fi
    pause_and_return
}

# 2. 设置公钥
function set_pubkey() {
    echo -e "${BLUE}[*] 设置 MINING_PUBKEY 到 .env 文件...${RESET}"
    if [ ! -d "$NCK_DIR" ]; then echo -e "${RED}项目目录不存在，请先运行安装。${RESET}"; pause_and_return; return; fi

    read -r -p "请输入您的挖矿公钥 (MINING_PUBKEY): " pubkey
    if [ -z "$pubkey" ] || ! [[ "$pubkey" =~ ^[0-9a-fA-F]{128}$ ]]; then
        echo -e "${RED}[-] 错误: 公钥格式不正确。它应该是128个十六进制字符。${RESET}"
        pause_and_return
        return
    fi

    # 自动创建或更新 .env
    if [ ! -f "$ENV_FILE" ]; then
        echo -e "${BLUE}[*] .env 文件不存在，将从 .env_example 创建。${RESET}"
        cp "$NCK_DIR/.env_example" "$ENV_FILE"
    fi

    local num_cores=$(get_num_cores)
    # 使用 sed 更新或添加变量
    grep -q '^MINING_PUBKEY=' "$ENV_FILE" && sed -i -e "/^MINING_PUBKEY=/c\MINING_PUBKEY=$pubkey" "$ENV_FILE" || echo "MINING_PUBKEY=$pubkey" >> "$ENV_FILE"
    grep -q '^MINER_THREADS=' "$ENV_FILE" || echo "MINER_THREADS=$num_cores" >> "$ENV_FILE"

    echo -e "${GREEN}[+] 挖矿配置已更新到 $ENV_FILE。${RESET}"
    echo -e "${YELLOW}[!] 如果您已启动挖矿服务，请重启 (选项 4 -> 3) 以使更改生效。${RESET}"
    pause_and_return
}


# 3. 安装并启动节点 (systemd)
function start_node() {
    echo -e "${BLUE}[*] 安装并启动 Nockchain 挖矿服务...${RESET}"
    if ! check_command systemctl; then
        echo -e "${RED}[-] 错误: 您的系统不支持 systemd。此功能不可用。${RESET}"
        pause_and_return
        return
    fi
    
    cd "$NCK_DIR"
    . "$ENV_FILE"

    if [ -z "${MINING_PUBKEY:-}" ]; then
        echo -e "${RED}[-] 错误: MINING_PUBKEY 未设置! 请先运行选项 2。${RESET}"
        pause_and_return
        return
    fi
    
    echo -e "${BLUE}[*] 正在创建 systemd 服务...${RESET}"
    sudo bash -c "cat <<EOF > $SERVICE_FILE
[Unit]
Description=$SERVICE_NAME service
After=network-online.target

[Service]
User=$USER
Group=$(id -gn "$USER")
WorkingDirectory=$NCK_DIR
EnvironmentFile=$ENV_FILE
ExecStart=$HOME/.cargo/bin/nockchain
Restart=on-failure
RestartSec=10
LimitNOFILE=65536
Nice=-5

[Install]
WantedBy=multi-user.target
EOF"

    echo -e "${BLUE}[*] 正在重载并启动服务...${RESET}"
    sudo systemctl daemon-reload
    sudo systemctl enable "$SERVICE_NAME"
    sudo systemctl start "$SERVICE_NAME"

    echo -e "${GREEN}===============================================${RESET}"
    echo -e "${GREEN}[+] Nockchain 挖矿服务已成功启动！${RESET}"
    echo -e "${YELLOW}    使用选项 5 查看实时日志。${RESET}"
    echo -e "${GREEN}===============================================${RESET}"
    pause_and_return
}

# 4. 停止节点 (systemd)
function stop_node() {
    echo -e "${BLUE}[*] 停止 Nockchain 挖矿服务...${RESET}"
    if ! check_command systemctl || [ ! -f "$SERVICE_FILE" ]; then
        echo -e "${YELLOW}[!] Systemd 服务未安装或不可用。${RESET}"
        pause_and_return
        return
    fi
    sudo systemctl stop "$SERVICE_NAME"
    echo -e "${GREEN}[+] 服务已停止。${RESET}"
    pause_and_return
}

# 5. 查看日志 (systemd)
function view_logs() {
    echo -e "${BLUE}[*] 查看实时挖矿日志...${RESET}"
    if ! check_command journalctl || [ ! -f "$SERVICE_FILE" ]; then
        echo -e "${YELLOW}[!] Systemd 服务未安装或不可用。${RESET}"
        pause_and_return
        return
    fi
    echo -e "${YELLOW}[!] 按 Ctrl+C 退出日志查看。${RESET}"
    journalctl -u "$SERVICE_NAME" -f --no-pager
    pause_and_return
}

# ========= 主菜单 =========
function main_menu() {
  show_banner
  echo -e "${BOLD}${GREEN}--- Nockchain 挖矿助手 ---${RESET}"
  echo "请选择操作:"
  echo ""
  echo -e "  ${BOLD}1) 一键安装增强版 Nockchain${RESET}"
  echo -e "  ${BOLD}2) 设置挖矿公钥 (MINING_PUBKEY)${RESET}"
  echo ""
  echo "  ${GREEN}3) 安装并启动挖矿服务 (Systemd)${RESET}"
  echo "  ${RED}4) 停止挖矿服务 (Systemd)${RESET}"
  echo "  ${YELLOW}5) 查看实时挖矿日志 (Systemd)${RESET}"
  echo ""
  echo -e "  ${CYAN}0) 退出脚本${RESET}"
  echo ""
  read -r -p "请输入编号: " choice

  case "$choice" in
    1) install_all ;;
    2) set_pubkey ;;
    3) start_node ;;
    4) stop_node ;;
    5) view_logs ;;
    0) echo "退出脚本."; exit 0 ;;
    *) echo -e "${RED}[-] 无效选项，请重新输入。${RESET}"; pause_and_return ;;
  esac
}

# ========= 脚本入口 =========
while true; do
    main_menu
done

exit 0
