#!/usr/bin/env bash
# nockchain_toolbox.sh 终极兼容版 v8.0
# 支持CentOS/Ubuntu系统 + 自动修复libstdc++错误

set -euo pipefail
IFS=$'\n\t'

# 全局配置
SRC_DIR="${HOME}/build/ethminer"
INSTALL_PREFIX="/usr/local"
LOG_FILE="${HOME}/nockchain.log"
CONFIG_FILE="${HOME}/.nockchain.conf"

# 颜色输出函数
c_info() { printf "\033[32m[INFO]\033[0m %s\n" "$*"; }
c_warn() { printf "\033[33m[WARN]\033[0m %s\n" "$*"; }
c_err()  { printf "\033[31m[ERR]\033[0m %s\n" "$*"; exit 1; }

# 系统检测
detect_os() {
    if grep -qEi "(centos|redhat)" /etc/*-release; then
        echo "centos"
    elif grep -qEi "debian|ubuntu" /etc/*-release; then
        echo "debian"
    else
        c_err "不支持的Linux发行版"
    fi
}

# 修复libstdc++问题
fix_libstdc() {
    case $(detect_os) in
        centos)
            sudo yum install -y gcc-c++ libstdc++-devel
            [[ ! -f /usr/lib64/libstdc++.so ]] && \
            sudo ln -sv /usr/lib64/libstdc++.so.6 /usr/lib64/libstdc++.so
            ;;
        debian)
            sudo apt-get update
            sudo apt-get install -y g++ libstdc++6 libstdc++-dev
            ;;
    esac
    sudo ldconfig
}

# 安装依赖
install_deps() {
    fix_libstdc
    
    case $(detect_os) in
        centos)
            sudo yum install -y epel-release
            sudo yum groupinstall -y "Development Tools"
            sudo yum install -y cmake git openssl-devel ocl-icd-devel opencl-headers ;;
        debian)
            sudo apt-get install -y build-essential cmake git libssl-dev ocl-icd-opencl-dev ;;
    esac
}

# 源码管理
fetch_source() {
    if [[ -d "$SRC_DIR/.git" ]]; then
        git -C "$SRC_DIR" stash push -m "auto_stash_$(date +%s)"
        git -C "$SRC_DIR" pull --rebase
        git -C "$SRC_DIR" stash pop || true
    else
        git clone --recursive https://github.com/ethereum-mining/ethminer.git "$SRC_DIR"
    fi
}

# 应用补丁
apply_patches() {
    sed -i '/CMAKE_CXX_STANDARD/a add_compile_options(-Wno-deprecated-declarations)' \
        "$SRC_DIR/CMakeLists.txt"
}

# 编译安装
build_ethminer() {
    mkdir -p "$SRC_DIR/build"
    cd "$SRC_DIR/build"
    
    cmake .. \
        -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_CXX_COMPILER=g++ \
        -DUSE_SYS_OPENCL=ON
    
    make -j$(nproc)
    sudo make install
}

# 钱包管理
manage_wallet() {
    read -rp "输入钱包地址: " wallet
    echo "WALLET=$wallet" > "$CONFIG_FILE"
}

# 节点控制
start_node() {
    [[ -f "$CONFIG_FILE" ]] || { c_warn "请先配置钱包"; return; }
    . "$CONFIG_FILE"
    nohup ethminer -P "stratum1+tcp://${WALLET}@eth.pool.example:4444" &>> "$LOG_FILE" &
}

# 日志查看
view_logs() {
    tail -n 50 -f "$LOG_FILE"
}

# 主菜单
show_menu() {
    clear
    echo -e "\n========== Nockchain 管理终端 =========="
    echo "1) 安装/更新 ethminer"
    echo "2) 配置钱包地址"
    echo "3) 启动挖矿节点"
    echo "4) 查看实时日志"
    echo "5) 退出"
}

main() {
    while true; do
        show_menu
        read -rp "请选择操作 [1-5]: " choice
        case $choice in
            1) install_deps; fetch_source; apply_patches; build_ethminer ;;
            2) manage_wallet ;;
            3) start_node ;;
            4) view_logs ;;
            5) exit 0 ;;
            *) c_warn "无效选项" ;;
        esac
        read -rp "按回车继续..."
    done
}

main "$@"
